version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: urlshortener-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: urlShortener
    volumes:
      - mongodb_data:/data/db
    networks:
      - urlshortener-network

  # Backend API
  backend: #This is a service for the backend API
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: urlshortener-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGODB_URI: mongodb://mongodb:27017/urlShortener
    depends_on:
      - mongodb
    volumes:
      - ./backend/logs.log:/app/logs.log
    networks:
      - urlshortener-network

  # Frontend with Nginx (Single Port Architecture)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: production
    container_name: urlshortener-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - urlshortener-network

  # Optional: MongoDB Express for database management
  mongo-express:
    image: mongo-express:latest
    container_name: urlshortener-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: 'true'
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: password
    depends_on:
      - mongodb
    networks:
      - urlshortener-network

volumes:
  mongodb_data:

networks:
  urlshortener-network:
    driver: bridge
